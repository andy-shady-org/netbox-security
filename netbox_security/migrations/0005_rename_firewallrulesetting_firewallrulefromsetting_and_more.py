# Generated by Django 5.0.10 on 2025-03-28 09:34

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("extras", "0121_customfield_related_object_filter"),
        ("netbox_security", "0004_alter_firewallfilterrule_options_and_more"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="FirewallRuleSetting",
            new_name="FirewallRuleFromSetting",
        ),
        migrations.CreateModel(
            name="FirewallRuleThenSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=200)),
                ("comments", models.TextField(blank=True)),
                (
                    "assigned_object_id",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ("value", models.CharField()),
                ("key", models.CharField()),
                (
                    "assigned_object_type",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "netbox_security"),
                                ("model", "firewallfilterrule"),
                            )
                        ),
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        through="extras.TaggedItem", to="extras.Tag"
                    ),
                ),
            ],
            options={
                "verbose_name": "Firewall Filter Rule Setting",
            },
        ),
    ]
